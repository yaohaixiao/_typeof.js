{"version":3,"file":"isXML.js","sources":["../isXML.js"],"sourcesContent":["/**\r\n * 检测是否为 XML 文档\r\n * ========================================================================\r\n * @method isXML\r\n * @since 0.2.0\r\n * @category String\r\n * @param {*} val - 要检测的数据\r\n * @returns {Boolean} 'val' 是 XML 文档，返回 true，否则返回 false\r\n * @example\r\n *\r\n * import jsdom from 'jsdom'\r\n * import { DOMParser } from 'xmldom'\r\n *\r\n * const { JSDOM } = jsdom;\r\n *\r\n * const HTML = new JSDOM('<html><head><title>isXML</title></head><body><p>p1</p><p>p2</p><p>p3</p></body></html>')\r\n * const XML = new DOMParser().parseFromString(\r\n *     '<xml xmlns=\"a\" xmlns:c=\"./lite\">\\n'+\r\n *         '\\t<child>test</child>\\n'+\r\n *         '\\t<child></child>\\n'+\r\n *         '\\t<child/>\\n'+\r\n *     '</xml>','text/xml')\r\n *\r\n * isXML(XML) // -> true\r\n *\r\n * isXML('html') // -> false\r\n * isXML(HTML) // -> false\r\n */\r\nconst isXML = (val) => {\r\n  const documentElement = val && (val.ownerDocument || val).documentElement\r\n  return documentElement ? documentElement.nodeName !== 'HTML' : false\r\n}\r\n\r\nexport default isXML\r\n"],"names":["val","documentElement","ownerDocument","nodeName"],"mappings":"6OA4BeA,IACb,MAAMC,EAAkBD,IAAQA,EAAIE,eAAiBF,GAAKC,gBAC1D,QAAOA,GAA+C,SAA7BA,EAAgBE,QAAsB"}