section.section
  header.section__header
    h3#method-isTime.section__h3 isTime(str)
  div.section__content
    h4.section__h4 Description
    p isTime(str) 方法用来检测测试数据是否为有效的时间（字符串）。
    dl.section__dl
      dt.section__dt Since：
      dd.section__dd 1.4.0
    h4.section__h4 Parameters
    h5.section__h4 str
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String
    p （必须）val 待检测的数据。
    h5.section__h4 type
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String
    p （可选）测试的时间类型:
    ul
      li time - 时间；
      li date - 日期；
      li 不传 - 时间或者日期皆可
    h4.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Boolean。
    p true - 表示检测数据为有效的时间，false 则表示不是。
    pre.section__pre
      code.section__code.
        import Types from '@yaohaixiao/types.js/types'
        // 或者单独引用 isTime() 方法
        // import isTime from '@yaohaixiao/types.js/isTime'

        let chinese

        // 非字符串
        Types.isTime(123) // -> false
        Types.isTime(false) // -> false
        Types.isTime(null) // -> false
        Types.isTime(chinese) // -> false
        Types.isTime(Symbol('symbol')) // -> false
        Types.isTime(BigInt(42)) // -> false
        Types.isTime({}) // -> false
        Types.isTime([]) // -> false
        Types.isTime(() => {}) // -> false

        // 字符串
        Types.isTime('time') // -> false

        // 时间
        // 12小时格式时间
        Types.isTime('1:23', 'time') // -> true
        Types.isTime('01:23', 'time') // -> true
        Types.isTime('11:23 am', 'time') // -> true
        Types.isTime('11:23 AM', 'time') // -> true
        Types.isTime('11:23 pm', 'time') // -> true
        Types.isTime('5:23 PM', 'time') // -> true

        Types.isTime('23:01 pm', 'time') // -> false

        // 24小时格式时间
        Types.isTime('3:34', 'time') // -> true
        Types.isTime('03:45', 'time') // -> true
        Types.isTime('18:16:01', 'time') // -> true
        Types.isTime('23:34:59', 'time') // -> true

        Types.isTime('03:60', 'time') // -> false
        Types.isTime('24:01', 'time') // -> false

        // 日期
        Types.isTime('2001.01.01') // -> true
        Types.isTime('2001/01/01') // -> true
        Types.isTime('2001-01-01') // -> true
        Types.isTime('2001-01-32') // -> false
        Types.isTime('2001-13-00') // -> false

        Types.isTime('01.01.2001') // -> true
        Types.isTime('01/11/2001') // -> true
        Types.isTime('31-12-2001') // -> true
        Types.isTime('31-13-2001') // -> false
        Types.isTime('32.12.2001') // -> false

        Types.isTime('Jul 08 2023 11:15:11', 'date') // -> true
        Types.isTime('Jul 32 2023 11:15:34', 'date') // -> false

