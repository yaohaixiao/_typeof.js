section.section
  header.section__header
    h3#method-isSVG.section__h3 isSVG(val)
  div.section__content
    h4.section__h4 Description
    p isSVG(val) 方法用来检测测试数据是否为合法的 SVG 代码。
    dl.section__dl
      dt.section__dt Since：
      dd.section__dd 1.11.0
    h4.section__h4 Parameters
    h5.section__h4 val
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String
    p （必须）val 待检测的数据。
    h4.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Boolean。
    p true - 表示检测数据为合法的 SVG 代码，false 则表示不是。
    pre.section__pre
      code.section__code.
        import Types from '@yaohaixiao/types.js'
        // 或者单独引用 isHTML() 方法
        // import isSVG from '@yaohaixiao/types.js/isSVG'

        // HTML 标签：
        Types.isHTML('&lt;!doctype html&gt;') // -&gt; true
        Types.isSVG('&lt;!doctype html&gt;') // -> false
        Types.isHTML('\n\n&lt;!doctype html&gt;&lt;html&gt;') // -&gt; true
        Types.isSVG('\n\n&lt;!doctype html&gt;&lt;html&gt;') // -&gt; false

        // SVG 标签：
        const svg = '&lt;?xml version="1.0" encoding="UTF-8"?>&lt;svg>&lt;/svg>'
        expect(is(svg)).toBe('svg')
        // 包含 xml 声明：
        expect(isSVG(svg)).toBe(true)

        const svg = '&lt;\!doctype svg>&lt;svg>&lt;/svg>'
        expect(is(svg)).toBe('svg')
        // 包含 doctype 声明：
        expect(isSVG(svg)).toBe(true)

        const svg = '&lt;svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 26 28">' +
                    '&lt;path d="M22 15.5v7.5c0">&lt;/path>' +
                    '&lt;/svg>'
        expect(is(svg)).toBe('svg')
        // 仅包含 SVG 标签：
        expect(isSVG(svg)).toBe(true)



