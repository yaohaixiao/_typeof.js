section.section
  header.section__header
    h3#method-is.section__h3 is(val)
  div.section__content
    dl.section__dl
      dt.section__dt Since：
      dd.section__dd 0.2.0
    h4.section__h4 Description
    p is(val) 方法返回检测 val 数据类型的字符串（名称）。
    h4.section__h4 Parameters
    h5.section__h4 val
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Any
    p （必须）val 待检测的数据。
    h4.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String。
    p 数据类型的字符串（名称）。
    pre.section__pre
      code.section__code.
        import Types from '@yaohaixiao/types.js'
        // 或者单独引用 is() 方法
        // import is from '@yaohaixiao/types.js/is'
        import { DOMParser } from 'xmldom'

        let Example
        let args
        const buffer = new ArrayBuffer(8)
        const dv = new DataView(buffer)
        const XML = new DOMParser().parseFromString(
                '&lt;xml xmlns="a" xmlns:c="./lite"&gt;\n' +
                '\t&lt;child&gt;test&lt;/child&gt;\n' +
                '\t&lt;child&gt;&lt;/child&gt;\n' +
                '\t&lt;child/&gt;\n' +
                '&lt;/xml&gt;',
                'text/xml'
        )

        function test(age){
          args = arguments
          return age
        }

        test(40)

        // 基础值类型
        Types.is('types.js') // -&gt; string
        Types.is(' ') // -&gt; blank
        Types.is('Z29vZA==') // -> base64
        Types.is('中国梦') // -&gt; chinese
        Types.is('type.js@gmail.com') // -&gt; email
        Types.is('') // -&gt; empty
        Types.is('3C8021B0-423D-475D-BECF-63ED5ED34563') // -&gt; guid
        Types.is('3C8021B0423D475DBECF63ED5ED34563') // -&gt; guid
        Types.is('#ffffff') // -&gt; hex
        Types.is('&lt;h2&gt;中国梦&lt;/h2&gt;') // -&gt; html
        Types.isIPAddress('126.11.15.255') // -> IP address
        Types.is('{"prop":"JSON"}') // -&gt; json
        Types.is('11:23 am') // -&gt; time
        Types.is('Jul 08 2023') // -&gt; time
        Types.is(2023) // -&gt; integer
        Types.is(3.0) // -&gt; integer
        Types.is(3.01) // -&gt; float
        Types.is(Infinity) // -&gt; infinite
        Types.is(true) // -&gt; boolean
        Types.is(null) // -&gt; null
        Types.is(Example) // -&gt; undefined
        Types.is(Symbol()) // -&gt; symbol
        Types.is(BigInt(42)) // -&gt; bigint

        // Set/WeakSet/Map/WeakMap
        Types.is(new Set()) // -&gt; set
        Types.is(new WeakSet()) // -&gt; weakset
        Types.is(new Map()) // -&gt; map
        Types.is(new WeakMap()) // -&gt; weakmap

        // Object 对象相关
        Types.is({}) // -&gt; object
        Types.is(new Object()) // -&gt; object
        Types.is(Object.prototype) // -&gt; prototype
        Types.is(XML) // -&gt; xml
        Types.is(Object.create(null)) // -&gt; object
        Types.is(new String()) // -&gt; object
        Types.is(new Number()) // -&gt; object
        Types.is(new Boolean()) // -&gt; object
        Types.is(new Error()) // -&gt; error
        Types.is(new Date()) // -&gt; data
        Types.is(new RegExp('/s/')) // -&gt; regexp
        Types.is(/\s+/ig) // -&gt; regexp
        Types.is(() =&gt; {}) // -&gt; function
        Types.is(args) // -&gt; arguments
        Types.is(dv) // -&gt; dataview
        Types.is(document.querySelector('#list')) // -&gt; element
        Types.is(document.querySelectorAll('.item')) // -&gt; coolection
        Types.is(document.createTextNode('text')) // -&gt; text
        Types.is(document.createDocumentFragment()) // -&gt; fragment

        // Array 相关
        Types.is([]) // -&gt; array
        Types.is(new ArrayBuffer(8)) // -&gt; arraybubber
        Types.is(new Int8Array([])) // -&gt; int8array
        Types.is(new Int16Array([])) // -&gt; int16array
        Types.is(new Int32Array([])) // -&gt; int32array
        Types.is(new Uint8Array([])) // -&gt; uint8array
        Types.is(new Uint8ClampedArray([])) // -&gt; uint8clampedarray
        Types.is(new Uint16Array([])) // -&gt; uint16array
        Types.is(new Uint32Array([])) // -&gt; uint32array
        Types.is(new Float32Array([])) // -&gt; float32array
        Types.is(new Float64Array([])) // -&gt; float64array
        Types.is(new BigInt64Array(64)) // -&gt; bigint64array
        Types.is(new BigUint64Array(64)) // -&gt; biguint64array
