section.section
  header.section__header
    h3#method-isEmail.section__h3 isEmail(val)
  div.section__content
    h4.section__h4 Description
    p isEmail(val) 方法用来检测测试数据是否为合法的 Email 格式。
    h4.section__h4 Parameters
    h5.section__h4 val
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd String
    p （必须）val 待检测的数据。
    h4.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Boolean。
    p true - 表示检测数据是合法的 Email 格式，false 则表示不是。
    pre.section__pre
      code.section__code.
        import Types from '@yaohaixiao/types.js/esm/types'
        // 或者单独引用 isEmail() 方法
        // import isEmail from '@yaohaixiao/types.js/esm/isEmail'

        Types.isEmail('yaohaixiao@gmail.com') // => true
        Types.isEmail('yaohaixiao@gmail.c') // => true
        Types.isEmail('haixiao-yao@gmail.com') // => true
        Types.isEmail('haixiao_yao@gmail.com') // => true
        Types.isEmail('haixiao&yao@gmail.com') // => true
        Types.isEmail('haixiao~yao@gmail.com') // => true
        Types.isEmail('haixiao+yao@gmail.com') // => true
        Types.isEmail('haixiao^yao@gmail.com') // => true
        Types.isEmail('haixiao%yao@gmail.com') // => true
        Types.isEmail('haixiao$yao@gmail.com') // => true
        Types.isEmail('haixiao.yao@gmail.com') // => true
        Types.isEmail('haixiao/yao@gmail.com') // => true
        Types.isEmail('haixiao#yao@gmail.com') // => true
        Types.isEmail('yao{haixiao@gmail.com') // => true
        Types.isEmail('yao|haixiao@gmail.com') // => true
        Types.isEmail('yao}haixiao@gmail.com') // => true

        Types.isEmail('yaohaixiao#gmail.com') // => false
        Types.isEmail('yao\haixiao@gmail.com') // => false
        Types.isEmail('yao[haixiao@gmail.com') // => false
