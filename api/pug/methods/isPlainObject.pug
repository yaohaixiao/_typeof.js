section.section
  header.section__header
    h3#method-isPlainObject.section__h3 isPlainObject(val)
  div.section__content
    h4.section__h4 Description
    p isPlainObject(val) 方法用来检测测试数据是否为普通对象。
    h4.section__h4 Parameters
    h5.section__h4 val
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Object
    p （必须）val 待检测的数据。
    h4.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Boolean。
    p true - 表示检测数据是普通对象，false 则表示不是。
    pre.section__pre
      code.section__code.
        import Types from '@yaohaixiao/types.js/esm/types'
        // 或者单独引用 isPlainObject() 方法
        // import isPlainObject from '@yaohaixiao/types.js/esm/isPlainObject'

        let udf

        // 基础类型
        Types.isPlainObject(2) // -> false
        Types.isPlainObject('str') // -> false
        Types.isPlainObject(false) // -> false
        Types.isPlainObject(null) // -> false
        Types.isPlainObject(udf) // -> false

        // 引用类型
        Types.isPlainObject(new Function()) // -> false
        Types.isPlainObject(function(){}) // -> false
        Types.isPlainObject(() => {}) // -> false
        Types.isPlainObject(class{}) // -> false

        Types.isPlainObject(new class{}) // -> true
        Types.isPlainObject({}) // -> true
        Types.isPlainObject(Object.create(null)) // -> true
        Types.isPlainObject(new Object()) // -> true
        Types.isPlainObject([]) // -> true
        Types.isPlainObject(/s+/ig) // -> true
        Types.isPlainObject(new String()) // -> true
        Types.isPlainObject(new Number()) // -> true
        Types.isPlainObject(new Boolean()) // -> true
        Types.isPlainObject(new Array()) // -> true
        Types.isPlainObject(new Date()) // -> true
