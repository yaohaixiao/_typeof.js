section.section
  header.section__header
    h3#method-isPromise.section__h3 isPromise(val)
  div.section__content
    dl.section__dl
      dt.section__dt Since：
      dd.section__dd 1.3.0
    h4.section__h4 Description
    p isPromise(val) 方法用来检测测试数据是否为 Promise 对象。
    h4.section__h4 Parameters
    h5.section__h4 val
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Any
    p （必须）val 待检测的数据。
    h4.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Boolean。
    p true - 表示检测数据是 Promise 对象，false 则表示不是。
    pre.section__pre
      code.section__code.
        import Types from '@yaohaixiao/types.js'
        // 或者单独引用 isPromise() 方法
        // import isPromise from '@yaohaixiao/types.js/isPromise'

        const resolve = Promise.resolve
        const reject = Promise.reject
        const request = new Promise((resolve, reject) => {})
        let val

        // 非对象参数
        Types.isPromise(null) // => false
        Types.isPromise(val) // => false
        Types.isPromise('') // => false
        Types.isPromise(12) // => false
        Types.isPromise(false) // => false
        Types.isPromise(BigInt(12)) // => false
        Types.isPromise(Symbol('prop')) // => false


        // 对象参数
        Types.isPromise([]]) // => false
        Types.isPromise({}) // => false
        Types.isPromise(class {}) // => false
        Types.isPromise(() => {}) // => false

        Types.isPromise(request) // => true
        Types.isPromise(Promise.all([resolve, resolve]) // => true
        Types.isPromise(Promise.any([resolve, reject]) // => true
        Types.isPromise(resolve) // => true
